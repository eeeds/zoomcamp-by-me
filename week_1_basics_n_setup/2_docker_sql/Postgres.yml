services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always


    winpty docker run -it  -e POSTGRES_USER="root"\
      -e POSTGRES_PASSWORD="root"\
      -e POSTGRES_DB="ny_taxi"\
      -v C://Users//User//Desktop//Github//zoomcamp-by-me//week_1_basics_n_setup//2_docker_sql//ny_taxi_postgres_data:/var/lib/postgresql/data -p 5432:5432  postgres:13

  ##Network
  ##Create a network
  docker network create pg-network
  ##Run postgres image
   winpty docker run -it  -e POSTGRES_USER="root" -e POSTGRES_PASSWORD="root" \
    -e POSTGRES_DB="ny_taxi" \
    -v C://Users//User//Desktop//Github//zoomcamp-by-me//week_1_basics_n_setup//2_docker_sql//ny_taxi_postgres_data:/var/lib/postgresql/data -p 5432:5432 \
    --network=pg-network \
    --name pg-database \
    postgres:13
  ##Run pgadmin image
    winpty docker run -it \
    -e PGADMIN_DEFAULT_EMAIL="admin@admin.com" \
    -e PGADMIN_DEFAULT_PASSWORD="root" \
    -p 8080:80 \
    --network=pg-network \
    --name pgadmin \
    dpage/pgadmin4
##Try arguments with python
URL="https://s3.amazonaws.com/nyc-tlc/trip+data/yellow_tripdata_2021-01.csv"

python ingest_data.py \
  --user=root \
  --password=root \
  --host=localhost \
  --port=5432 \
  --db=ny_taxi \
  --table_name=yellow_taxi_trip \
  --url=${URL}